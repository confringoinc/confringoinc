{"version":3,"sources":["utils/CommonFunctions.js","components/ScrollToTop.js","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["retry","fn","retriesLeft","interval","Promise","resolve","reject","then","catch","error","setTimeout","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Loader","className","Navigation","lazy","Home","Contact","Footer","App","console","log","pages","pageLink","view","fallback","map","page","index","path","element","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAO,SAASA,EAAMC,GAAuC,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAN,IACpD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BL,IACGM,KAAKF,GACLG,OAAM,SAACC,GACNC,YAAW,WACW,IAAhBR,EAOJF,EAAMC,EAAIC,EAAc,EAAGC,GAAUI,KAAKF,EAASC,GALjDA,EAAOG,KAMRN,SCXI,SAASQ,IACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,WCAMK,EARA,WACb,OACE,oBAAIC,UAAU,0DAAd,wBCEEC,EAAaC,gBAAK,kBAAMpB,GAAM,kBAAM,mCACpCqB,EAAOD,gBAAK,kBAAMpB,GAAM,kBAAM,mCAC9BsB,EAAUF,gBAAK,kBAAMpB,GAAM,kBAAM,mCACjCuB,EAASH,gBAAK,kBAAMpB,GAAM,kBAAM,yDAuCvBwB,EArCH,WACVC,QAAQC,IAAI,kCAA8B,0FAE1C,IAAMC,EAAQ,CACZ,CACEC,SAAU,IACVC,KAAMR,GAER,CACEO,SAAU,WACVC,KAAMP,IAIV,OACE,eAAC,IAAD,WACE,cAACX,EAAD,IACA,eAAC,WAAD,CAAUmB,SAAU,cAAC,EAAD,IAApB,UACE,cAACX,EAAD,IACA,eAAC,IAAD,WACGQ,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,IAAD,CACEC,KAAMF,EAAKJ,SACXO,QAAS,cAACH,EAAKH,KAAN,KACJI,MAIX,cAAC,IAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUE,GAAI,WAE/C,cAACd,EAAD,WC9BOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98008f51.chunk.js","sourcesContent":["export function retry(fn, retriesLeft = 5, interval = 1000) {\r\n  return new Promise((resolve, reject) => {\r\n    fn()\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          if (retriesLeft === 1) {\r\n            // reject('maximum retries exceeded');\r\n            reject(error);\r\n            return;\r\n          }\r\n\r\n          // Passing on \"reject\" is the important part\r\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n        }, interval);\r\n      });\r\n  });\r\n}","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <h1 className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n      CONFRINGO\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default Loader","import './App.css';\nimport React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { retry } from './utils/CommonFunctions';\nimport ScrollToTop from './components/ScrollToTop';\nimport Loader from './components/Loader';\nconst Navigation = lazy(() => retry(() => import('./components/Navigation')));\nconst Home = lazy(() => retry(() => import('./pages/Home')));\nconst Contact = lazy(() => retry(() => import('./pages/Contact')));\nconst Footer = lazy(() => retry(() => import('./components/Footer')));\n\nconst App = () => {\n  console.log('%cMade with ‚ù§ by Hit Patel', 'color: black; background: grey; font-size: 15px; padding: 5px 15px; border-radius: 6px');\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home\n    },\n    {\n      pageLink: '/contact',\n      view: Contact\n    }\n  ];\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <Suspense fallback={<Loader />}>\n        <Navigation />\n        <Routes>\n          {pages.map((page, index) => {\n            return (\n              <Route\n                path={page.pageLink}\n                element={<page.view />}\n                key={index}\n              />\n            );\n          })}\n          <Route exact path=\"/\" element={<Navigate to =\"/\" />} />\n        </Routes>\n        <Footer />\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}